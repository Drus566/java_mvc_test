https://habr.com/ru/articles/137347/
https://objectcomputing.com/resources/publications/sett/may-2009-miglayout-the-one-java-layout-manager-that-does-it-all
https://docs.oracle.com/javase/8/docs/api/javax/swing/JLayer.html
https://youtu.be/W3wkSboz9CA
https://youtu.be/bfn56kAsq4I
http://weblookandfeel.com

DB
http://orientdb.com/docs/3.2.x/indexing/FullTextIndex.html
http://orientdb.com/docs/3.2.x/indexing/Full-Text-Index.html

            FULLTEXT ENGINE LUCENE METADATA {
                "default": "org.apache.lucene.analysis.standard.StandardAnalyzer",
                "index": "org.apache.lucene.analysis.core.KeywordAnalyzer",
                "query": "org.apache.lucene.analysis.standard.StandardAnalyzer",
                "name_index": "org.apache.lucene.analysis.standard.StandardAnalyzer",
                "name_query": "org.apache.lucene.analysis.core.KeywordAnalyzer",
                "lyrics_index": "org.apache.lucene.analysis.en.EnglishAnalyzer",
                "title_index": "org.apache.lucene.analysis.en.EnglishAnalyzer",
                "title_query": "org.apache.lucene.analysis.en.EnglishAnalyzer",
                "author_query": "org.apache.lucene.analysis.core.KeywordAnalyzer",
                "description_index": "org.apache.lucene.analysis.standard.StandardAnalyzer",
                "description_index_stopwords": [
                  "the",
                  "is"
                ]
            }

1. принадлежность к группе (1-7 групп)
2. иерархия внутри группы (1-??)
3.  перфорация для крепления в шкафу(20/25 мм в зав-ти от типа каркаса)
4. мах размеры объекта (ШГВ)
5. наличие отверстий (да/нет)
6. материал (металл, оц, медь, Al, поликарбонат, стэф, ткмщ)
7. сортамент (лист, круг, шестирганник, полоса,…)
8. толщина (0-20...), диам, р-р шестигр.
9. простые / сложные=количество гибов больше 3.
10. картинка

на выходе список децимальных номеров 3d или чертежей.

PropertyChangeSupport в Swing - это служебный класс, который обеспечивает механизм уведомления об изменениях свойств объекта.
Основные характеристики
Позволяет регистрировать и удалять слушателей изменений свойств
Используется для реализации паттерна Observer в JavaBeans
Входит в пакет java.beans
Ключевые методы
addPropertyChangeListener(): Добавление слушателя изменений
removePropertyChangeListener(): Удаление слушателя
firePropertyChange(): Уведомление слушателей о изменении свойства
Пример использования
java
public class MyBean {
    private PropertyChangeSupport propertySupport;
    private String sampleProperty;

    public MyBean() {
        propertySupport = new PropertyChangeSupport(this);
    }

    public void setSampleProperty(String value) {
        String oldValue = sampleProperty;
        sampleProperty = value;
        propertySupport.firePropertyChange("sampleProperty", oldValue, sampleProperty);
    }
}
Важность
Позволяет создавать гибкие компоненты с возможностью отслеживания изменений
Обеспечивает слабую связанность между компонентами


https://stackoverflow.com/questions/5217611/the-mvc-pattern-and-swing

https://www.youtube.com/watch?v=icf5S9fzRXE

https://www.youtube.com/watch?v=aGOWweeAfcw - jdbc


public enum ComponentType {
    VIEW(1, "UserView"),
    MODEL(2, "DataModel"),
    CONTROLLER(3, "MainController");

    private final int id;
    private final String name;

    ComponentType(int id, String name) {
        this.id = id;
        this.name = name;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }
}
Singleton-подход с инициализацией
java
public enum ComponentRegistry {
    INSTANCE;

    private Map<ComponentType, Object> components = new HashMap<>();

    public void register(ComponentType type, Object component) {
        components.put(type, component);
    }

    public <T> T getComponent(ComponentType type) {
        return (T) components.get(type);
    }
}
Преимущества подхода
Уникальная идентификация компонентов
Возможность регистрации и получения компонентов
Типобезопасность
Centralized management
Пример использования
java
public class Application {
    public static void main(String[] args) {
        // Регистрация компонентов
        ComponentRegistry.INSTANCE.register(
            ComponentType.VIEW,
            new UserView()
        );

        ComponentRegistry.INSTANCE.register(
            ComponentType.MODEL,
            new UserModel()
        );

        // Получение компонентов
        UserView view = ComponentRegistry.INSTANCE
            .getComponent(ComponentType.VIEW);

        UserModel model = ComponentRegistry.INSTANCE
            .getComponent(ComponentType.MODEL);
    }
}
Дополнительные возможности
Поддержка lazy-инициализации
Автоматическая регистрация компонентов
Безопасный доступ к компонентам
Ключевая особенность: Enum позволяет создать потокобезопасный, простой и расширяемый механизм управления компонентами.


---------------------
(ВЫПОЛНЕНО) * Алгоритм двойного клика
 1. Попробовать открыть pdf;
 2. Открыть папку;
 3. Открыть окно управления

(ВЫПОЛНЕНО) * Убрать возможность добавления параметра с если параметр с таким именем уже существует
* Добавить псевдоним для наименования параметра (для удобства поиска)
(ВЫПОЛНЕНО) * Перечисления не нужны
(ВЫПОЛНЕНО) * Диапазоны не нужны
(ВЫПОЛНЕНО) * Делать поиск по ключевым словам в строке например "[длина=32(3),ширина=5,материал=металл]", в скобках допуск.
* Возможно в будущем сделать панель для поиска (для не опытных пользователей)
*? Первые 5 вариантов быстрого поиска убрать (показалось бесполезным и не нужным)
(ВЫПОЛНЕНО) * Сохранять к папке детали SVN путь между перезапусками программы
(ВЫПОЛНЕНО) * Правой кнопкой мыши по таблице открыть окно управления
(ВЫПОЛНЕНО) * Добавить тред пул
(ВЫПОЛНЕНО) * Добавить новый компонент (для удобного поиска) в редактор наименований детали
(ВЫПОЛНЕНО) * Добавить новый компонент (для удобного поиска) в редактор типа параметров деталей
(ВЫПОЛНЕНО) * Добавить в таблицу столбец параметры
* Добавить автодополнение
* Поправить кнопки "Обновить(подгрузить с БД актуальную версию сущности)"
* Поправить редактирование, обновление детали
(ВЫПОЛНЕНО) * Подписать понятные подсказки
* Добавить защиту от редактирования детали двумя и более пользователями
* Добавить поддержку Drag and drop при выборе папки с деталями
* Добавить историю запросов
* Поправить параметр детали

Примеры запросов
[Материал="олово",длина=3(2)] - детали где параметр материал = олово и длина = 3 с допуском 2
[] - детали где нет параметров
[!] - детали, где есть параметры
напр[!] - деталь в имени, децимальном номере или описании есть слово "напр" и у нее есть хотя бы один параметр
пластина[] - деталь в имени, дец. ном. или описании есть слово "пластина" и у нее есть хотя бы один параметр
шпилька[материал="золото",длина=5.3(3)] - деталь в имени, описании, дец. номере есть слово "шпилька" и у нее есть хотя бы один параметр.
шпилька[+материал,+длина]

****
СОЗДАНИЕ ДЕТАЛИ (РАБОТАЕТ!)
Запоминаю пердыдущие параметры
Беру текущий текст из "Наименование", если в списке компонента нет текущего текста (то ошибка "текст должен быть только из списка")
Беру текущий текст из "Децимальный номер", если пустой, то null
Беру текущий текст из Примечание
Беру текущий текст из ключа параметра, если в списке компонента нет текущего текста (то ошибка "текст должен быть только из списка")
Беру текущий текст из значения параметра, если он не соответствует типу установленного ранее ключа параметра, то ошибка типа данных
ПОДТВЕРДИТЬ (РАБОТАЕТ!)
Присваивается айди
Все значения остаются на своих местах
ОТМЕНА (РАБОТАЕТ!)
Все значения меняются на запомненные перед кнопкной "создание детали"

РЕДАКТИРОВТАЬ ДЕТАЛЬ
(Попытка заблокировать деталь, Другой не может редактировать)
Должен быть айдишник иначе ошибка
по сути то же самое как и для создания детали
ПОДТВЕРДИТЬ
Все значения остаются на своих местах
ОТМЕНА
(По сути должен сделать обновление детали)

ОБНОВИТЬ ДЕТАЛЬ
если во время редактирования|создания (обновляем только списки)
иначе
получаем деталь по БД и заполняем всё включая списки

УДАЛИТЬ ДЕТАЛЬ (РАБОТАЕТ)


****

SELECT * FROM Detail WHERE params IN (SELECT @rid FROM DetailParameter WHERE type IN (SELECT @rid FROM DetailParameterType WHERE name='String')) AND SEARCH_CLASS('-deleted:true') = true

SELECT * FROM Detail
WHERE
  params IN (
    SELECT @rid FROM DetailParameter
    WHERE
      type IN (SELECT @rid FROM DetailParameterType WHERE name='Длина')
      AND SEARCH_CLASS('value:[12 TO 123]') = true
  )
AND deleted = false

SELECT * FROM Detail
WHERE
  params IN (
    SELECT @rid FROM DetailParameter
    WHERE
      type IN (SELECT @rid FROM DetailParameterType WHERE name='Длина')
      AND SEARCH_CLASS('value:123') = true
  )
AND
  params IN (
    SELECT @rid FROM DetailParameter
    WHERE
      type IN (SELECT @rid FROM DetailParameterType WHERE name='Материал')
      AND SEARCH_CLASS('value:Серебро') = true
  )
AND
  params IN (
    SELECT @rid FROM DetailParameter
    WHERE
      type IN (SELECT @rid FROM DetailParameterType WHERE name='Высота')
      AND SEARCH_CLASS('value:3') = true
  )
AND deleted = false
AND SEARCH_CLASS('шт~ || шт* || *шт* || шт') = true;


x длина y ширина z высота
l длина s толщина
Обозначение="ТИДЖ.745512.596" Наименование="Уголок" X1X2=898,000000000001 Y1Y2=50 Z1Z2=50,0000000000001 L=898 S=3
Обозначение="ТИДЖ.745512.596-01" Наименование="Уголок" X1X2=898,000000000001 Y1Y2=50 Z1Z2=50,0000000000001 L=898 S=3
Обозначение="ТИДЖ.745512.596-02" Наименование="Уголок" X1X2=898 Y1Y2=45 Z1Z2=30,0000000000001 L=898 S=3




//    public boolean rebuildIndex() {
//        boolean result = true;
//        try {
//            OrientDBDriver.getInstance().getSession().activateOnCurrentThread();
//            OrientDBDriver.getInstance().getSession().command("REBUILD INDEX *");
//        }
//        catch (OException e) {
//            OrientDBDriver.getInstance().setLastError(e.getMessage());
//            result = false;
//        }
//        return result;
//    }

//        String query = "SELECT FROM Detail WHERE SEARCH_CLASS(?) = true;";
//        SELECT FROM Detail WHERE SEARCH_CLASS('deleted:true && шт~ || шт* || *шт* || шт') = true;
//        SELECT FROM Detail WHERE SEARCH_CLASS('(шина~ || шина* || *шина* || шина) AND -deleted:true', {
//                "sort": [ { 'field': 'name', reverse:true, type:'STRING' }]
//}) = true;
//

//        String q = "SELECT FROM Detail WHERE SEARCH_CLASS('(шина~ || шина* || *шина* || шина) AND -deleted:true', { \"sort\": [ { 'field': 'name', reverse:true, type:'STRING' }]}) = true;";
        // SELECT FROM Detail WHERE SEARCH_CLASS("~ || * || *sad* || sad) = true
        //


SELECT FROM Detail
WHERE
SEARCH_CLASS('балка || балка* || *балка* || балка~', { "sort": [{ 'field': 'name', reverse:false, type:'STRING' }]}) = true
AND
    params IN (
        SELECT @rid FROM DetailParameter
        WHERE
            type IN (SELECT @rid FROM DetailParameterType WHERE name='длина')
            AND SEARCH_CLASS('value:33) = true) AND deleted = false


SELECT FROM Detail
WHERE
SEARCH_CLASS('балка || балка* || *балка* || балка~', { "sort": [{ 'field': 'name', reverse:false, type:'STRING' }]}) = true
AND
    params IN (
        SELECT @rid FROM DetailParameter
        WHERE
            type IN (SELECT @rid FROM DetailParameterType WHERE name='Длина')
            AND SEARCH_CLASS('value:') = true) AND deleted = false

SELECT FROM Detail
WHERE
SEARCH_CLASS('Балка || Балка* || *Балка* || Балка~', { "sort": [{ 'field': 'name', reverse:false, type:'STRING' }]}) = true
AND
    params IN ( SELECT @rid FROM DetailParameter
    WHERE
        type IN (SELECT @rid FROM DetailParameterType WHERE name='Длина')
        AND SEARCH_CLASS('value:[197 TO 203]') = true) AND deleted = false


SELECT * FROM Detail
WHERE
SEARCH_CLASS('шт~ || шт* || *шт* || шт') = true;
AND
  params IN (
    SELECT @rid FROM DetailParameter
    WHERE
      type IN (SELECT @rid FROM DetailParameterType WHERE name='Длина')
      AND SEARCH_CLASS('value:123') = true
  )
AND
  params IN (
    SELECT @rid FROM DetailParameter
    WHERE
      type IN (SELECT @rid FROM DetailParameterType WHERE name='Материал')
      AND SEARCH_CLASS('value:Серебро') = true
  )
AND
  params IN (
    SELECT @rid FROM DetailParameter
    WHERE
      type IN (SELECT @rid FROM DetailParameterType WHERE name='Высота')
      AND SEARCH_CLASS('value:3') = true
  )
AND deleted = false



